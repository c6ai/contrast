"use strict";(self.webpackChunkcontrast_docs=self.webpackChunkcontrast_docs||[]).push([[2564],{3857:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var s=t(4848),i=t(8453);const r={},o="Contrast Runtime",a={id:"components/runtime",title:"Contrast Runtime",description:"In Contrast, pods use a custom runtime class that has to be registered with the apiserver.",source:"@site/docs/components/runtime.md",sourceDirName:"components",slug:"/components/runtime",permalink:"/contrast/pr-preview/pr-397/next/components/runtime",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Components",permalink:"/contrast/pr-preview/pr-397/next/components/"},next:{title:"service-mesh",permalink:"/contrast/pr-preview/pr-397/next/components/service-mesh"}},d={},c=[{value:"Node-level components",id:"node-level-components",level:2},{value:"Containerd shim",id:"containerd-shim",level:3},{value:"<code>cloud-hypervisor</code> virtual machine manager (VMM)",id:"cloud-hypervisor-virtual-machine-manager-vmm",level:3},{value:"<code>Tardev snapshotter</code>",id:"tardev-snapshotter",level:3},{value:"Pod-VM image",id:"pod-vm-image",level:3},{value:"Node installer DaemonSet",id:"node-installer-daemonset",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"contrast-runtime",children:"Contrast Runtime"}),"\n",(0,s.jsxs)(n.p,{children:["In Contrast, pods use a custom runtime class that has to be registered with the apiserver.\nThe ",(0,s.jsx)(n.code,{children:"RuntimeClass"})," resource defines a name for referencing the class and\na handler that's used by the container runtime (",(0,s.jsx)(n.code,{children:"containerd"}),") to identify the class."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: node.k8s.io/v1\nkind: RuntimeClass\nmetadata:\n  # This name is used by pods in the runtimeClassName field\n  name: contrast-cc-abcdef\n# This name is used by the\n# container runtime interface implementation (containerd)\nhandler: contrast-cc-abcdef\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Confidential pods that are part of a Contrast deployment need to specify the\nsame runtime class in the ",(0,s.jsx)(n.code,{children:"runtimeClassName"})," field, so Kubernetes uses the\nContrast runtime instead of the default ",(0,s.jsx)(n.code,{children:"containerd"})," / ",(0,s.jsx)(n.code,{children:"runc"})," handler."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nspec:\n  runtimeClassName: contrast-cc-abcdef\n  # ...\n"})}),"\n",(0,s.jsx)(n.h2,{id:"node-level-components",children:"Node-level components"}),"\n",(0,s.jsx)(n.p,{children:"The runtime consists of additional software components that need to be installed\nand configured on every SEV-SNP enabled worker node."}),"\n",(0,s.jsx)(n.h3,{id:"containerd-shim",children:"Containerd shim"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"handler"})," field in the Kubernetes ",(0,s.jsx)(n.code,{children:"RuntimeClass"})," instructs containerd to not use the default ",(0,s.jsx)(n.code,{children:"runc"})," implementation\nand instead invoke a custom plugin called ",(0,s.jsx)(n.code,{children:"containerd-shim-contrast-cc-v2"}),".\nThis shim is described in more detail in the ",(0,s.jsx)(n.a,{href:"https://github.com/kata-containers/kata-containers/tree/3.4.0/src/runtime",children:"upstream source repository"})," and in the ",(0,s.jsx)(n.a,{href:"https://github.com/containerd/containerd/blob/main/core/runtime/v2/README.md",children:"containerd documentation"}),"."]}),"\n",(0,s.jsxs)(n.h3,{id:"cloud-hypervisor-virtual-machine-manager-vmm",children:[(0,s.jsx)(n.code,{children:"cloud-hypervisor"})," virtual machine manager (VMM)"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"containerd"})," shim uses ",(0,s.jsx)(n.code,{children:"cloud-hypervisor"})," to create a confidential virtual machine for every pod.\nThis requires the ",(0,s.jsx)(n.code,{children:"cloud-hypervisor"})," binary to be installed on every node."]}),"\n",(0,s.jsx)(n.h3,{id:"tardev-snapshotter",children:(0,s.jsx)(n.code,{children:"Tardev snapshotter"})}),"\n",(0,s.jsxs)(n.p,{children:["Contrast uses a special ",(0,s.jsx)(n.code,{children:"containerd"})," snapshotter (",(0,s.jsx)(n.a,{href:"https://github.com/kata-containers/tardev-snapshotter",children:(0,s.jsx)(n.code,{children:"tardev"})}),") to provide container images as block devices to the pod-VM. This snapshotter consists of a host component that pulls container images and a guest component (kernel module) that's used to mount container images."]}),"\n",(0,s.jsx)(n.h3,{id:"pod-vm-image",children:"Pod-VM image"}),"\n",(0,s.jsxs)(n.p,{children:["Every pod-VM starts the same guest image. It consists of an ",(0,s.jsx)(n.code,{children:"IGVM"})," file and a root filesystem.\nThe ",(0,s.jsx)(n.code,{children:"IGVM"})," file describes the initial memory contents of a pod-VM and consists of:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Linux kernel image"}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"initrd"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"kernel commandline"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Additionally, a root filesystem image is used that contains a read-only partition with the user space of the pod-VM and a verity partition to guarantee the integrity of the root filesystem.\nThe root filesystem contains systemd as the init system, and the kata agent for managing the pod."}),"\n",(0,s.jsx)(n.p,{children:"This pod-VM image isn't specific to any pod workload. Instead, container images are mounted at runtime."}),"\n",(0,s.jsx)(n.h2,{id:"node-installer-daemonset",children:"Node installer DaemonSet"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"RuntimeClass"})," resource above registers the runtime with the Kubernetes api.\nThe node-level installation is carried out by the Contrast node-installer\n",(0,s.jsx)(n.code,{children:"DaemonSet"})," that ships with every Contrast release."]}),"\n",(0,s.jsx)(n.p,{children:"After deploying the installer, it performs the following steps on each node:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Install the Contrast containerd shim (",(0,s.jsx)(n.code,{children:"containerd-shim-contrast-cc-v2"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Install ",(0,s.jsx)(n.code,{children:"cloud-hypervisor"})," as the virtual machine manager (VMM)"]}),"\n",(0,s.jsx)(n.li,{children:"Install an IGVM file for pod-VMs of this class"}),"\n",(0,s.jsx)(n.li,{children:"Install a read only root filesystem disk image for the pod-VMs of this class"}),"\n",(0,s.jsxs)(n.li,{children:["Reconfigure ",(0,s.jsx)(n.code,{children:"containerd"})," by adding a runtime plugin that corresponds to the ",(0,s.jsx)(n.code,{children:"handler"})," field of the Kubernetes ",(0,s.jsx)(n.code,{children:"RuntimeClass"})]}),"\n",(0,s.jsxs)(n.li,{children:["Restart ",(0,s.jsx)(n.code,{children:"containerd"})," to make it aware of the new plugin"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);