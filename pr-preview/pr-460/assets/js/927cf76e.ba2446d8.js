"use strict";(self.webpackChunkcontrast_docs=self.webpackChunkcontrast_docs||[]).push([[1226],{5103:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>h});var r=n(4848),s=n(8453);const i={},o="Observability",c={id:"architecture/observability",title:"Observability",description:"To gain insight over your Contrast deployment, the Coordinator exposes metrics",source:"@site/docs/architecture/observability.md",sourceDirName:"architecture",slug:"/architecture/observability",permalink:"/contrast/pr-preview/pr-460/next/architecture/observability",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Certificate authority",permalink:"/contrast/pr-preview/pr-460/next/architecture/certificates"},next:{title:"Known limitations",permalink:"/contrast/pr-preview/pr-460/next/known-limitations"}},a={},h=[{value:"Exposed metrics",id:"exposed-metrics",level:2},{value:"Accessing the metrics",id:"accessing-the-metrics",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"observability",children:"Observability"}),"\n",(0,r.jsxs)(t.p,{children:["To gain insight over your Contrast deployment, the Coordinator exposes metrics\nin the ",(0,r.jsx)(t.a,{href:"https://prometheus.io/",children:"Prometheus"})," format. This can be used to measure\nthe gRPC connections to the Coordinator and quickly identify connection errors.\nPrometheus metrics are numerical measurements associated with a name and\nadditional key/values pairs, called labels."]}),"\n",(0,r.jsx)(t.h2,{id:"exposed-metrics",children:"Exposed metrics"}),"\n",(0,r.jsxs)(t.p,{children:["The metrics can be accessed at the Coordinator pod at port ",(0,r.jsx)(t.code,{children:"9102"})," under the\n",(0,r.jsx)(t.code,{children:"/metrics"})," endpoint. The Coordinator starts two gRPC servers, one for the user\nAPI on port ",(0,r.jsx)(t.code,{children:"1313"})," and one for the mesh API on port ",(0,r.jsx)(t.code,{children:"7777"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["All metric names for the user API are prefixed with ",(0,r.jsx)(t.code,{children:"userapi_grpc_server_"}),".\nExposed metrics include the number of  handled requests of the methods\n",(0,r.jsx)(t.code,{children:"SetManifest"})," and ",(0,r.jsx)(t.code,{children:"GetManifest"}),", which get called when ",(0,r.jsx)(t.a,{href:"../deployment#set-the-manifest",children:"setting the\nmanifest"})," and ",(0,r.jsx)(t.a,{href:"../deployment#verify-the-coordinator",children:"verifying the\nCoordinator"})," respectively. For each method\nyou can see the gRPC status code indicating if the request succeeded or not."]}),"\n",(0,r.jsxs)(t.p,{children:["For the mesh API, the metric names are prefixed with ",(0,r.jsx)(t.code,{children:"meshapi_grpc_server_"}),". The\nmetrics include similar data to the user API for the method ",(0,r.jsx)(t.code,{children:"NewMeshCert"})," which\ngets called by the ",(0,r.jsx)(t.a,{href:"../components#the-initializer",children:"Initializer"})," when starting a\nnew workload."]}),"\n",(0,r.jsx)(t.h2,{id:"accessing-the-metrics",children:"Accessing the metrics"}),"\n",(0,r.jsxs)(t.p,{children:["The Coordinator pod has the annotation ",(0,r.jsx)(t.code,{children:"prometheus.io/scrape"})," set to ",(0,r.jsx)(t.code,{children:"true"})," so\nit can be found by the ",(0,r.jsx)(t.a,{href:"https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config",children:"service discovery of\nPrometheus"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["For quick access to the metrics when debugging a Contrast deployment, you can\nsetup a Prometheus server with helm, using the ",(0,r.jsx)(t.a,{href:"https://github.com/prometheus-community/helm-charts",children:"Prometheus Community Helm\nCharts"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:"helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo update\n"})}),"\n",(0,r.jsxs)(t.p,{children:["The default scrape interval is set to one minute. You may want to change this by\ncreating a ",(0,r.jsx)(t.code,{children:"values.yml"})," file like this:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yml",children:"server:\n  global:\n    scrape_interval: 10s\n"})}),"\n",(0,r.jsx)(t.p,{children:"You can then install the helm chart with the following command:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:"helm install <release-name> prometheus-community/prometheus -f values.yml\n"})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var r=n(6540);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);